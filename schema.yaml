openapi: 3.0.0
info:
  title: Entando Core APIs
  description: Entando Core APIs
  termsOfService: 'https://'
  contact:
    name: Walter Caffiero
    url: 'https://'
    email: w.caffiero@entando.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  version: 7.0.0
servers:
  - url: /entando-de-app/api
    description: Entando 7.0 API base path
paths:
  /activityStream:
    summary: Activity stream operations
    description: End-point to access and manipulate the activity stream
    get:
      tags:
        - activity-stream-controller
      summary: Retrieve the activity stream
      description: Retrieve the activity stream's records filtered by query parameters
      externalDocs:
        description: ''
        url: 'https://'
      operationId: getActivityStream
      parameters:
        - $ref: '#/components/parameters/allowedValues'
        - $ref: '#/components/parameters/attribute'
        - $ref: '#/components/parameters/entityAttr'
        - $ref: '#/components/parameters/operator'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/value'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          $ref: '#/components/responses/activityStream'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
  '/activityStream/{recordId}/comments':
    summary: Activity stream record's comments collection operations
    description: End-point to access and manipulate the activity stream record's comments collection
    parameters:
      - $ref: '#/components/parameters/activityStreamRecordId'
    post:
      tags:
        - activity-stream-controller
      summary: Add a comment to an activity stream record
      description: Add the comment to the activity stream record specified in the path as described in the request body
      externalDocs:
        description: ''
        url: 'https://'
      operationId: addComment
      requestBody:
        $ref: '#/components/requestBodies/activityStreamRecordComment'
      responses:
        '200':
          $ref: '#/components/responses/activityStreamRecord'
        '201':
          $ref: '#/components/responses/created'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
  '/activityStream/{recordId}/comments/{commentId}':
    summary: Activity stream record's comment operations
    description: End-point to access and manipulate an activity stream record's comment
    parameters:
      - $ref: '#/components/parameters/activityStreamRecordId'
      - $ref: '#/components/parameters/activityStreamRecordCommentId'
    delete:
      tags:
        - activity-stream-controller
      summary: Remove a comment from the activity stream record
      description: Remove the comment from the activity stream record as specified in the path
      externalDocs:
        description: ''
        url: 'https://'
      operationId: removeComment
      responses:
        '200':
          $ref: '#/components/responses/activityStreamRecord'
        '204':
          $ref: '#/components/responses/noContent'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
  '/activityStream/{recordId}/like':
    summary: Activity stream record's likes collection operations
    description: End-point to access and manipulate the activity stream record's likes collection
    parameters:
      - $ref: '#/components/parameters/activityStreamRecordId'
    post:
      tags:
        - activity-stream-controller
      summary: Add a like to an activity stream record
      description: Add a like to the activity stream record specified in the path
      externalDocs:
        description: ''
        url: 'https://'
      operationId: addLike
      responses:
        '200':
          $ref: '#/components/responses/activityStreamRecord'
        '201':
          $ref: '#/components/responses/created'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
    delete:
      tags:
        - activity-stream-controller
      summary: Remove a like from an activity stream record
      description: Remove a like from the activity stream record specified in the path
      externalDocs:
        description: ''
        url: 'https://'
      operationId: removeLike
      responses:
        '200':
          $ref: '#/components/responses/activityStreamRecord'
        '204':
          $ref: '#/components/responses/noContent'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
  /analysis/cms/components/diff:
    summary: CMS components analysis operations
    description: API to perform analysis on CMS components
    post:
      tags:
        - analysis-controller-cms
      summary: Run the CMS component existence analysis
      description: Perform the analysis on the existnce of the CMS components
      externalDocs:
        description: ''
        url: 'https://'
      operationId: runCMSComponentExistenceAnalysis
      requestBody:
        $ref: '#/components/requestBodies/idCodesByObjectType'
      responses:
        '200':
          $ref: '#/components/responses/restResponse'
        '201':
          $ref: '#/components/responses/created'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
  /analysis/components/diff:
    summary: Components analysis operations
    description: API to perform analysis on components
    post:
      tags:
        - analysis-controller
      summary: Run the component existence analysis
      description: Perform the analysis on the existnce of the components
      externalDocs:
        description: ''
        url: 'https://'
      operationId: runComponentExistenceAnalysis
      requestBody:
        $ref: '#/components/requestBodies/idCodesByObjectType'
      responses:
        '200':
          $ref: '#/components/responses/restResponse'
        '201':
          $ref: '#/components/responses/created'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
  /categories:
    summary: Categories operations
    description: API to access and manipulate the collection of categories
    get:
      tags:
        - category-controller
      summary: Retrieve the collection of categories
      description: Retrieve the collection of categories filtered by parent code
      externalDocs:
        description: ''
        url: 'https://'
      operationId: getCategories
      parameters:
        - $ref: '#/components/parameters/categoriesParentCode'
      responses:
        '200':
          $ref: '#/components/responses/categoriesListMapMetadata'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
    post:
      tags:
        - category-controller
      summary: Add a category to the categories collection
      description: Create a new category as specified in the request body and add it to the categories collection
      externalDocs:
        description: ''
        url: 'https://'
      operationId: addCategory
      requestBody:
        $ref: '#/components/requestBodies/category'
      responses:
        '200':
          $ref: '#/components/responses/category'
        '201':
          $ref: '#/components/responses/created'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
  '/categories/{categoryId}':
    summary: Category operations
    description: API to access and manipulate a category
    parameters:
      - $ref: '#/components/parameters/categoryId'
    get:
      tags:
        - category-controller
      summary: Retrieve a category
      description: Retrieve the category specified in the path from the categories collection
      externalDocs:
        description: ''
        url: 'https://'
      operationId: getCategory
      responses:
        '200':
          $ref: '#/components/responses/category'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
    put:
      tags:
        - category-controller
      summary: Update a category
      description: Update the category specified in the path as described in the request body
      externalDocs:
        description: ''
        url: 'https://'
      operationId: updateCategory
      requestBody:
        $ref: '#/components/requestBodies/category'
      responses:
        '200':
          $ref: '#/components/responses/categoryMapMetadata'
        '201':
          $ref: '#/components/responses/created'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
  /oauth/authorize:
    summary: Authorization operations
    description: API to handle authorizations
    get:
      tags:
        - authorization-endpoint
      summary: Authorize
      description: Authorize via GET
      externalDocs:
        description: ''
        url: 'https://'
      operationId: authorizeGET
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/complete'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/parameters'
      responses:
        '200':
          $ref: '#/components/responses/modelAndViewObject_generic'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
    put:
      tags:
        - authorization-endpoint
      summary: Authorize
      description: Authorize via PUT
      externalDocs:
        description: ''
        url: 'https://'
      operationId: authorizePUT
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/complete'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/parameters'
      responses:
        '200':
          $ref: '#/components/responses/modelAndViewObject_generic'
        '201':
          $ref: '#/components/responses/created'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
    post:
      tags:
        - authorization-endpoint
      summary: Authorize
      description: Authorize via POST
      externalDocs:
        description: ''
        url: 'https://'
      operationId: authorizePOST
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/complete'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/parameters'
      responses:
        '200':
          $ref: '#/components/responses/modelAndViewObject_generic'
        '201':
          $ref: '#/components/responses/created'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
    delete:
      tags:
        - authorization-endpoint
      summary: Authorize
      description: Authorize via DELETE
      externalDocs:
        description: ''
        url: 'https://'
      operationId: authorizeDELETE
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/complete'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/parameters'
      responses:
        '200':
          $ref: '#/components/responses/modelAndViewObject_generic'
        '204':
          $ref: '#/components/responses/noContent'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
    options:
      tags:
        - authorization-endpoint
      summary: Authorize
      description: Authorize via OPTIONS
      externalDocs:
        description: ''
        url: 'https://'
      operationId: authorizeOPTIONS
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/complete'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/parameters'
      responses:
        '200':
          $ref: '#/components/responses/modelAndViewObject_generic'
        '204':
          $ref: '#/components/responses/noContent'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
    head:
      tags:
        - authorization-endpoint
      summary: Authorize
      description: Authorize via HEAD
      externalDocs:
        description: ''
        url: 'https://'
      operationId: authorizeHEAD
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/complete'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/parameters'
      responses:
        '200':
          $ref: '#/components/responses/modelAndViewObject_generic'
        '204':
          $ref: '#/components/responses/noContent'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
    patch:
      tags:
        - authorization-endpoint
      summary: Authorize
      description: Authorize via PATCH
      externalDocs:
        description: ''
        url: 'https://'
      operationId: authorizePATCH
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/complete'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/parameters'
      responses:
        '200':
          $ref: '#/components/responses/modelAndViewObject_generic'
        '204':
          $ref: '#/components/responses/noContent'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
components:
  schemas:
    activityStreamRecord:
      title: Activity stream record
      type: object
      properties:
        actionName:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/activityStreamCommentInfo'
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        likes:
          type: array
          items:
            $ref: '#/components/schemas/activityStreamLikeInfo'
        namespace:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        updatedAt:
          type: string
          format: date-time
        username:
          type: string
    activityStreamCommentInfo:
      title: Activity stream record comment info
      type: object
      properties:
        commentDate:
          type: string
          format: date-time
        commentText:
          type: string
        displayName:
          type: string
        id:
          type: integer
          format: int32
        username:
          type: string
    activityStreamLikeInfo:
      title: Activity stream record like info
      type: object
      properties:
        displayName:
          type: string
        username:
          type: string
    category:
      title: Category
      type: object
      properties:
        children:
          type: array
          items:
            type: string
        code:
          type: string
        fullTitles:
          type: object
          additionalProperties:
            type: string
        parentCode:
          type: string
        references:
          type: object
          additionalProperties:
            type: boolean
        titles:
          type: object
          additionalProperties:
            type: string
    filter:
      title: Filter
      type: object
      properties:
        attribute:
          type: string
        entityAttr:
          type: string
        operator:
          type: string
        order:
          type: string
        type:
          type: string
        value:
          type: string
        allowedValues:
          type: array
          items:
            type: string
    modelAndView:
      title: Model and view
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
          properties: {}
        modelMap:
          type: object
          additionalProperties:
            type: object
            properties: {}
        reference:
          type: boolean
        status:
          type: string
          enum:
            - CONTINUE
            - SWITCHING_PROTOCOLS
            - PROCESSING
            - CHECKPOINT
            - OK
            - CREATED
            - ACCEPTED
            - NON_AUTHORITATIVE_INFORMATION
            - NO_CONTENT
            - RESET_CONTENT
            - PARTIAL_CONTENT
            - MULTI_STATUS
            - ALREADY_REPORTED
            - IM_USED
            - MULTIPLE_CHOICES
            - MOVED_PERMANENTLY
            - FOUND
            - MOVED_TEMPORARILY
            - SEE_OTHER
            - NOT_MODIFIED
            - USE_PROXY
            - TEMPORARY_REDIRECT
            - PERMANENT_REDIRECT
            - BAD_REQUEST
            - UNAUTHORIZED
            - PAYMENT_REQUIRED
            - FORBIDDEN
            - NOT_FOUND
            - METHOD_NOT_ALLOWED
            - NOT_ACCEPTABLE
            - PROXY_AUTHENTICATION_REQUIRED
            - REQUEST_TIMEOUT
            - CONFLICT
            - GONE
            - LENGTH_REQUIRED
            - PRECONDITION_FAILED
            - PAYLOAD_TOO_LARGE
            - REQUEST_ENTITY_TOO_LARGE
            - URI_TOO_LONG
            - REQUEST_URI_TOO_LONG
            - UNSUPPORTED_MEDIA_TYPE
            - REQUESTED_RANGE_NOT_SATISFIABLE
            - EXPECTATION_FAILED
            - I_AM_A_TEAPOT
            - INSUFFICIENT_SPACE_ON_RESOURCE
            - METHOD_FAILURE
            - DESTINATION_LOCKED
            - UNPROCESSABLE_ENTITY
            - LOCKED
            - FAILED_DEPENDENCY
            - TOO_EARLY
            - UPGRADE_REQUIRED
            - PRECONDITION_REQUIRED
            - TOO_MANY_REQUESTS
            - REQUEST_HEADER_FIELDS_TOO_LARGE
            - UNAVAILABLE_FOR_LEGAL_REASONS
            - INTERNAL_SERVER_ERROR
            - NOT_IMPLEMENTED
            - BAD_GATEWAY
            - SERVICE_UNAVAILABLE
            - GATEWAY_TIMEOUT
            - HTTP_VERSION_NOT_SUPPORTED
            - VARIANT_ALSO_NEGOTIATES
            - INSUFFICIENT_STORAGE
            - LOOP_DETECTED
            - BANDWIDTH_LIMIT_EXCEEDED
            - NOT_EXTENDED
            - NETWORK_AUTHENTICATION_REQUIRED
        view:
          $ref: '#/components/schemas/view'
        viewName:
          type: string
    pagedRestResponse:
      title: Paged REST response
      type: object
      allOf:
        - $ref: '#/components/schemas/restResponseListPayload'
        - properties:
            metadata:
              $ref: '#/components/schemas/paginationMetadata'
    paginationMetadata:
      title: Pagination metadata
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int32
        sort:
          type: string
        direction:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/filter'
        additionalParams:
          type: object
          additionalProperties:
            type: string
    restError:
      title: REST error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    restResponse:
      title: REST response
      type: object
      properties:
        payload:
          type: object
        metadata:
          type: object
        errors:
          type: array
          items:
            $ref: '#/components/schemas/restError'
    restResponseListPayload:
      title: REST response list payload
      type: object
      allOf:
        - $ref: '#/components/schemas/restResponse'
        - properties:
            payload:
              type: array
              items:
                type: object
    restResponseListPayloadMapMetadata:
      title: REST response list payload map metadata
      type: object
      allOf:
        - $ref: '#/components/schemas/restResponseMapMetadata'
        - $ref: '#/components/schemas/restResponseListPayload'
    restResponseMapMetadata:
      title: REST response map metadata
      type: object
      allOf:
        - $ref: '#/components/schemas/restResponse'
        - properties:
            metadata:
              type: object
              additionalProperties:
                type: string
    restResponseMapPayload:
      title: REST response map payload
      type: object
      allOf:
        - $ref: '#/components/schemas/restResponse'
        - properties:
            payload:
              type: object
              additionalProperties:
                type: string
    view:
      title: View
      type: object
      properties:
        contentType:
          type: string
  responses:
    activityStream:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/pagedRestResponse'
              - properties:
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/activityStreamRecord'
    activityStreamRecord:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/restResponse'
              - properties:
                  payload:
                    $ref: '#/components/schemas/activityStreamRecord'
    categoriesListMapMetadata:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/restResponseListPayloadMapMetadata'
              - properties:
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/category'
    category:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/restResponse'
              - properties:
                  payload:
                    $ref: '#/components/schemas/category'
    categoryMapMetadata:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/restResponseMapMetadata'
              - properties:
                  payload:
                    $ref: '#/components/schemas/category'
    modelAndViewObject_generic:
      description: OK
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/modelAndView'
    restResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/restResponse'
    created:
      description: Created
    forbidden:
      description: Forbidden
    noContent:
      description: No content
    notFound:
      description: Not found
    unauthorized:
      description: Unauthorized
  parameters:
    activityStreamRecordId:
      name: recordId
      in: path
      description: ''
      required: true
      schema:
        type: integer
        format: int32
    activityStreamRecordCommentId:
      name: commentId
      in: path
      description: ''
      required: true
      schema:
        type: integer
        format: int32
    allowedValues:
      name: 'filters[0].allowedValues'
      in: query
      description: ''
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    attribute:
      name: 'filters[0].attribute'
      in: query
      description: ''
      schema:
        type: string
    categoriesParentCode:
      name: parentCode
      in: query
      description: ''
      schema:
        type: string
        default: home
    categoryId:
      name: categoryId
      in: path
      description: Category code
      required: true
      schema:
        type: string
    complete:
      name: complete
      in: query
      description: ''
      schema:
        type: boolean
    direction:
      name: direction
      in: query
      description: ''
      schema:
        type: string
    entityAttr:
      name: 'filters[0].entityAttr'
      in: query
      description: ''
      schema:
        type: string
    model:
      name: model
      in: query
      description: ''
      schema:
        type: object
    name:
      name: name
      in: query
      description: ''
      schema:
        type: string
    operator:
      name: 'filters[0].operator'
      in: query
      description: ''
      schema:
        type: string
    order:
      name: 'filters[0].order'
      in: query
      description: ''
      schema:
        type: string
    page:
      name: page
      in: query
      description: ''
      schema:
        type: integer
        format: int32
    pageSize:
      name: pageSize
      in: query
      description: ''
      schema:
        type: integer
        format: int32
    parameters:
      name: parameters
      in: query
      description: ''
      required: true
      schema: {}
    sort:
      name: sort
      in: query
      description: ''
      schema:
        type: string
    type:
      name: 'filters[0].type'
      in: query
      description: ''
      schema:
        type: string
    value:
      name: 'filters[0].value'
      in: query
      description: ''
      schema:
        type: string
  examples: {}
  requestBodies:
    activityStreamRecordComment:
      description: Activity stream record comment
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              comment:
                type: string
              recordId:
                type: integer
                format: int32
    category:
      description: Category
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/category'
    idCodesByObjectType:
      description: ID codes by object type
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: object
  headers: {}
  securitySchemes:
    entando:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /auth/realms/entando/protocol/openid-connect/auth
          tokenUrl: /auth/realms/entando/protocol/openid-connect/token
          scopes: {}
  links: {}
  callbacks: {}
security:
  - entando: []
tags:
  - name: activity-stream-controller
    description: Activity stream operations
  - name: analysis-controller
    description: Analysis operations
  - name: analysis-controller-cms
    description: CMS analysis operations
  - name: authorization-endpoint
    description: Authorization operations
  - name: category-controller
    description: Categories operations
externalDocs:
  description: ''
  url: 'https://'